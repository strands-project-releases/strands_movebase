cmake_minimum_required(VERSION 2.8.3)
project(strands_movebase)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED roscpp sensor_msgs std_msgs pcl_ros tf)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   std_msgs  # Or other packages containing msgs
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES scitos_2d_navigation
  CATKIN_DEPENDS roscpp sensor_msgs std_msgs pcl_ros tf
  DEPENDS libpcl-all-dev
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include ${catkin_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
include_directories(
  ${catkin_INCLUDE_DIRS}
  include
)

## Declare a cpp library
#add_library(noise_voxel_grid src/noise_voxel_grid.cpp)
add_library(noise_approximate_voxel_grid src/noise_approximate_voxel_grid.cpp include/strands_movebase/noise_approximate_voxel_grid.h)

## Declare a cpp executable
add_executable(subsample_cloud src/subsample_cloud.cpp)
add_executable(remove_edges_cloud src/remove_edges_cloud.cpp)
add_executable(remove_edges_laser src/remove_edges_laser.cpp)
add_executable(mirror_floor_points src/mirror_floor_points.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(scitos_2d_navigation_node scitos_2d_navigation_generate_messages_cpp)

target_link_libraries(noise_approximate_voxel_grid
  ${PCL_LIBRARIES}
)

target_link_libraries(subsample_cloud
  ${catkin_LIBRARIES} ${PCL_LIBRARIES} noise_approximate_voxel_grid
)

target_link_libraries(remove_edges_cloud
  ${catkin_LIBRARIES} ${PCL_LIBRARIES}
)

target_link_libraries(remove_edges_laser
  ${catkin_LIBRARIES}
)

target_link_libraries(mirror_floor_points
  ${catkin_LIBRARIES} ${PCL_LIBRARIES}
)


#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
install(TARGETS subsample_cloud remove_edges_cloud remove_edges_laser mirror_floor_points noise_approximate_voxel_grid
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

install(DIRECTORY launch/
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/launch
)

install(DIRECTORY strands_movebase_params/
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/strands_movebase_params
)

## Mark cpp header files for installation
# install(DIRECTORY launch/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
install(FILES
  include/strands_movebase/noise_approximate_voxel_grid.h
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
)

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_scitos_2d_navigation.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
